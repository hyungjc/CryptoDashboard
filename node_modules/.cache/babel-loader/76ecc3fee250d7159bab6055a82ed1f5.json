{"ast":null,"code":"var _jsxFileName = \"/Users/hyungjunchang/Desktop/login/src/frontend/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport httpClient from '../../httpClient';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const logOut = async () => {\n    await httpClient.post(\"//localhost:5000/logout\");\n    window.location.href = \"/\";\n  };\n\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    const fetch = async () => {\n      const resp = await httpClient.get(\"//localhost:5000/@me\");\n      setUser(resp.data);\n      console.log(\"error\");\n      console.log(resp.data);\n    };\n\n    fetch() // make sure to catch any error\n    .catch(console.error);\n  }, []); //         (async() => {\n  //                         const resp = await httpClient.get(\"//localhost:5000/@me\");\n  //                         setUser(resp.data)\n  //                         console.log(resp.data)\n  //                 }\n  // )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      className: \"w-100\",\n      type: \"button\",\n      onClick: () => logOut(),\n      children: \"LogOut\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false) //   <div>{user != null ? (\n  //           <>\n  //         <h1>logged in</h1>\n  //         <Button className = \"w-100\" type = \"button\" onClick = {() => logOut()}>LogOut</Button>\n  //         </>\n  // ) :  <h1>Not logged in</h1>}\n  // </div>\n  ;\n};\n\n_s(Dashboard, \"1fGzjkuHsXOBknpXtE/CndQyig0=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/hyungjunchang/Desktop/login/src/frontend/components/Dashboard.js"],"names":["React","Button","httpClient","useEffect","useState","Dashboard","logOut","post","window","location","href","user","setUser","fetch","resp","get","data","console","log","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEhB,QAAMC,MAAM,GAAG,YAAW;AAClB,UAAMJ,UAAU,CAACK,IAAX,CAAgB,yBAAhB,CAAN;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACP,GAHD;;AAMA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AAER,UAAMU,KAAK,GAAG,YAAW;AACjB,YAAMC,IAAI,GAAG,MAAMZ,UAAU,CAACa,GAAX,CAAe,sBAAf,CAAnB;AACAH,MAAAA,OAAO,CAACE,IAAI,CAACE,IAAN,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB;AAEP,KAND;;AAOAH,IAAAA,KAAK,GACL;AADK,KAEJM,KAFD,CAEOF,OAAO,CAACG,KAFf;AAGH,GAZI,EAYF,EAZE,CAAT,CAXgB,CAyBhB;AAEA;AACA;AACA;AAEA;AACA;AACR;;AAGE,sBACQ;AAAA,2BACA,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAG,OAApB;AAA4B,MAAA,IAAI,EAAG,QAAnC;AAA4C,MAAA,OAAO,EAAI,MAAMd,MAAM,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADR,CAIM;AACA;AACA;AACA;AACA;AACA;AAEA;AAXN;AAgBD,CApDD;;GAAMD,S;;KAAAA,S;AAsDN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport httpClient from '../../httpClient'\nimport {useEffect, useState} from 'react'\n\n\nconst Dashboard = () => {\n\n        const logOut = async() => {\n                await httpClient.post(\"//localhost:5000/logout\");\n                window.location.href = \"/\";\n        }\n\n\n        const [user, setUser] = useState(\"\")\n        \n\n        useEffect(() => {\n\n                const fetch = async() => {\n                        const resp = await httpClient.get(\"//localhost:5000/@me\")\n                        setUser(resp.data)\n                        console.log(\"error\")\n                        console.log(resp.data)\n\n                }\n                fetch()\n                // make sure to catch any error\n                .catch(console.error);\n            }, [])\n        \n        //         (async() => {\n                        \n        //                         const resp = await httpClient.get(\"//localhost:5000/@me\");\n        //                         setUser(resp.data)\n        //                         console.log(resp.data)\n                        \n        //                 }\n        // )\n// }\n\n\n  return (\n          <>\n          <Button className = \"w-100\" type = \"button\" onClick = {() => logOut()}>LogOut</Button>\n          </>\n        //   <div>{user != null ? (\n        //           <>\n        //         <h1>logged in</h1>\n        //         <Button className = \"w-100\" type = \"button\" onClick = {() => logOut()}>LogOut</Button>\n        //         </>\n        // ) :  <h1>Not logged in</h1>}\n        \n        // </div>\n    \n    \n    \n  )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}