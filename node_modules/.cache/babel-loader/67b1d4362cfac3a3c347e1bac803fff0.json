{"ast":null,"code":"var _jsxFileName = \"/Users/hyungjunchang/Desktop/login/src/frontend/components/Korbitchart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart, ArcElement } from 'chart.js';\nimport httpClient from '../../httpClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement);\n\nconst Korbitchart = () => {\n  _s();\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const resp = await httpClient.get(\"//localhost:5000/dashboard\");\n      const data = resp.data;\n      console.log(\"From fetchapi\", Object.values(data).map(crypto => crypto));\n      setChartData({\n        labels: Object.keys(data).map(crypto => crypto),\n        datasets: [{\n          label: \"Price in KRW\",\n          data: Object.values(data).map(crypto => crypto.current)\n        }]\n      });\n    };\n\n    fetchAPI();\n  }, []);\n  const [chartData, setChartData] = useState({}); // const data = {\n  //         labels: ['Mon','Tue','Wed','Thurs','Fri'],\n  //         datasets: [\n  //             {\n  //                 label: 'Attendance for Week 1',\n  //                 data: [25,24,25,25,3],\n  //                 borderColor: ['rgba(255,206,86,0.2)'],\n  //                 backgroundColor: ['rgba(232,99,132,1)',\n  //                 'rgba(232,211,6,1)',\n  //                 'rgba(54,162,235,1)',\n  //                 'rgba(255,159,64,1)',\n  //                 'rgba(153,102,255,1)' ],\n  //                 pointBackgroundColor: 'rgba(255,206,86,0.2)',\n  //             }\n  //         ]\n  //     }\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Doughnut Chart',\n        color: 'blue',\n        font: {\n          size: 34\n        },\n        padding: {\n          top: 30,\n          bottom: 30\n        },\n        responsive: true,\n        animation: {\n          animateScale: true\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Korbitchart, \"/AkA5bMTosMNdItTX/MQXETZnss=\");\n\n_c = Korbitchart;\nexport default Korbitchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Korbitchart\");","map":{"version":3,"sources":["/Users/hyungjunchang/Desktop/login/src/frontend/components/Korbitchart.js"],"names":["React","useState","useEffect","Doughnut","Chart","ArcElement","httpClient","register","Korbitchart","fetchAPI","resp","get","data","console","log","Object","values","map","crypto","setChartData","labels","keys","datasets","label","current","chartData","options","plugins","title","display","text","color","font","size","padding","top","bottom","responsive","animation","animateScale"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,KAAR,EAAeC,UAAf,QAAgC,UAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AACAF,KAAK,CAACG,QAAN,CAAeF,UAAf;;AAGA,MAAMG,WAAW,GAAG,MAAM;AAAA;;AAGlBN,EAAAA,SAAS,CAAC,MAAM;AACR,UAAMO,QAAQ,GAAG,YAAW;AACpB,YAAMC,IAAI,GAAG,MAAMJ,UAAU,CAACK,GAAX,CAAe,4BAAf,CAAnB;AACA,YAAMC,IAAI,GAAGF,IAAI,CAACE,IAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,MAAM,CAACC,MAAP,CAAcJ,IAAd,EAAoBK,GAApB,CAAyBC,MAAD,IAAYA,MAApC,CAA7B;AAEAC,MAAAA,YAAY,CAAC;AACLC,QAAAA,MAAM,EAAEL,MAAM,CAACM,IAAP,CAAYT,IAAZ,EAAkBK,GAAlB,CAAuBC,MAAD,IAAYA,MAAlC,CADH;AAELI,QAAAA,QAAQ,EAAE,CACF;AACQC,UAAAA,KAAK,EAAE,cADf;AAEQX,UAAAA,IAAI,EAAEG,MAAM,CAACC,MAAP,CAAcJ,IAAd,EAAoBK,GAApB,CAAyBC,MAAD,IAAYA,MAAM,CAACM,OAA3C;AAFd,SADE;AAFL,OAAD,CAAZ;AAYP,KAjBD;;AAkBAf,IAAAA,QAAQ;AACf,GApBQ,EAoBN,EApBM,CAAT;AAsBA,QAAM,CAACgB,SAAD,EAAYN,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C,CAzBkB,CA2BlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAMyB,OAAO,GAAG;AACRC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE,gBAFH;AAGHC,QAAAA,KAAK,EAAC,MAHH;AAIHC,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAC;AADH,SAJH;AAOHC,QAAAA,OAAO,EAAC;AACJC,UAAAA,GAAG,EAAC,EADA;AAEJC,UAAAA,MAAM,EAAC;AAFH,SAPL;AAWHC,QAAAA,UAAU,EAAC,IAXR;AAYHC,QAAAA,SAAS,EAAC;AACNC,UAAAA,YAAY,EAAE;AADR;AAZP;AADF;AADD,GAAhB;AAqBN,sBACE;AAAA,2BAAK,QAAC,QAAD;AAAU,MAAA,IAAI,EAAId,SAAlB;AAA6B,MAAA,OAAO,EAAIC;AAAxC;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CArED;;GAAMlB,W;;KAAAA,W;AAuEN,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Doughnut} from 'react-chartjs-2'\nimport {Chart, ArcElement} from 'chart.js'\nimport httpClient from '../../httpClient'\nChart.register(ArcElement);\n\n\nconst Korbitchart = () => {\n\n\n        useEffect(() => {\n                const fetchAPI = async() => {\n                        const resp = await httpClient.get(\"//localhost:5000/dashboard\")\n                        const data = resp.data\n                        console.log(\"From fetchapi\", Object.values(data).map((crypto) => crypto))\n\n                        setChartData({\n                                labels: Object.keys(data).map((crypto) => crypto),\n                                datasets: [\n                                        {\n                                                label: \"Price in KRW\",\n                                                data: Object.values(data).map((crypto) => crypto.current)\n                                        }\n                                ]\n                        })\n\n\n                        \n                }\n                fetchAPI()\n        }, []);\n\n        const [chartData, setChartData] = useState({})\n\n        // const data = {\n        //         labels: ['Mon','Tue','Wed','Thurs','Fri'],\n        //         datasets: [\n        //             {\n        //                 label: 'Attendance for Week 1',\n        //                 data: [25,24,25,25,3],\n        //                 borderColor: ['rgba(255,206,86,0.2)'],\n        //                 backgroundColor: ['rgba(232,99,132,1)',\n        //                 'rgba(232,211,6,1)',\n        //                 'rgba(54,162,235,1)',\n        //                 'rgba(255,159,64,1)',\n        //                 'rgba(153,102,255,1)' ],\n        //                 pointBackgroundColor: 'rgba(255,206,86,0.2)',\n        //             }\n            \n        //         ]\n        //     }\n\n        const options = {\n                plugins: {\n                    title: {\n                        display: true,\n                        text: 'Doughnut Chart',\n                        color:'blue',\n                        font: {\n                            size:34\n                        },\n                        padding:{\n                            top:30,\n                            bottom:30\n                        },\n                        responsive:true,\n                        animation:{\n                            animateScale: true,\n                                       }\n                    }\n                }\n            \n            }\n  return (\n    <div><Doughnut data = {chartData} options = {options}/></div>\n  )\n}\n\nexport default Korbitchart"]},"metadata":{},"sourceType":"module"}