{"ast":null,"code":"var _jsxFileName = \"/Users/hyungjunchang/Desktop/login/src/frontend/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Nav, Navbar, NavDropdown, Container } from 'react-bootstrap';\nimport httpClient from '../../httpClient';\nimport { useEffect, useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const logOut = async () => {\n    await httpClient.post(\"//localhost:5000/logout\");\n    window.location.href = \"/\";\n  };\n\n  const cookies = new Cookies();\n  console.log(cookies.get(\"session\"));\n  const [user, setUser] = useState(\"\");\n  const [myData, setData] = useState(\"\");\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/@me\");\n        const access = await httpClient.get(\"//localhost:5000/dashboard\");\n        setUser(resp.data);\n        setData(access.data);\n        console.log(resp.data);\n        console.log(access.data);\n      } catch (error) {\n        if (error.response.status === 401) {\n          alert(\"Please login\");\n          window.location.href = \"/\";\n        }\n      }\n    };\n\n    fetch() // make sure to catch any error\n    .catch(console.error);\n  }, []); //     const [myData, setData] = useState(\"\")\n  //     useEffect(() => {\n  //             fetch('//localhost:5000/dashboard').then(\n  //                     response => console.log(response)\n  //             ).then(data => console.log(data))\n  //     }, []);\n  //         (async() => {\n  //                         const resp = await httpClient.get(\"//localhost:5000/@me\");\n  //                         setUser(resp.data)\n  //                         console.log(resp.data)\n  //                 }\n  // )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"#korbit\",\n            children: \"Korbit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"#Metamask\",\n            children: \"Metamask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ms-auto\",\n        children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n          title: user.email,\n          children: /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            onClick: () => logOut(),\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)\n  }, void 0, false) //   <div>{user != null ? (\n  //           <>\n  //         <h1>logged in</h1>\n  //         <Button className = \"w-100\" type = \"button\" onClick = {() => logOut()}>LogOut</Button>\n  //         </>\n  // ) :  <h1>Not logged in</h1>}\n  // </div>\n  ;\n};\n\n_s(Dashboard, \"axdEJEvSMU/EnP03KoeB32dxlRk=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/hyungjunchang/Desktop/login/src/frontend/components/Dashboard.js"],"names":["React","Button","Nav","Navbar","NavDropdown","Container","httpClient","useEffect","useState","Cookies","Dashboard","logOut","post","window","location","href","cookies","console","log","get","user","setUser","myData","setData","fetch","resp","access","data","error","response","status","alert","catch","email"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Nav, Navbar, NavDropdown, Container } from 'react-bootstrap'\nimport httpClient from '../../httpClient'\nimport {useEffect, useState} from 'react'\nimport Cookies from 'universal-cookie'\n\n\nconst Dashboard = () => {\n\n        const logOut = async() => {\n                await httpClient.post(\"//localhost:5000/logout\");\n                window.location.href = \"/\";\n        }\n\n        const cookies = new Cookies();\n        console.log(cookies.get(\"session\"))\n\n\n        const [user, setUser] = useState(\"\")\n        const [myData, setData] = useState(\"\")\n        \n\n        useEffect(() => {\n\n\n                const fetch = async() => {\n                        try{\n\n                                const resp = await httpClient.get(\"//localhost:5000/@me\")\n                                const access = await httpClient.get(\"//localhost:5000/dashboard\")\n                                setUser(resp.data)\n                                setData(access.data)\n                                console.log(resp.data)\n                                console.log(access.data)\n                        }\n                        catch(error) {\n                                if (error.response.status === 401){\n                                        alert(\"Please login\")\n                                        window.location.href = (\"/\")\n                                }\n                        }\n                        \n\n                }\n                fetch()\n                // make sure to catch any error\n                .catch(console.error);\n            }, [])\n\n        //     const [myData, setData] = useState(\"\")\n        //     useEffect(() => {\n        //             fetch('//localhost:5000/dashboard').then(\n        //                     response => console.log(response)\n        //             ).then(data => console.log(data))\n        //     }, []);\n        \n        //         (async() => {\n                        \n        //                         const resp = await httpClient.get(\"//localhost:5000/@me\");\n        //                         setUser(resp.data)\n        //                         console.log(resp.data)\n                        \n        //                 }\n        // )\n// }\n\n\n  return (\n          <>\n          <Navbar bg = \"dark\" variant = \"dark\">\n                <Container>\n                        \n                        <Navbar.Brand href = \"#\">Dashboard</Navbar.Brand>\n                        \n                        <Nav className = \"me-auto\">\n                                <Nav.Link href = \"#korbit\">Korbit</Nav.Link>\n                                <Nav.Link href = \"#Metamask\">Metamask</Nav.Link>\n\n                        </Nav>\n                </Container>\n\n                \n\n                <Nav className = \"ms-auto\">\n                        <NavDropdown title = {user.email}>\n                                <NavDropdown.Item onClick = {() => logOut()}>Logout</NavDropdown.Item>\n                        {/* <Button className = \"w-100\" type = \"button\" onClick = {() => logOut()}>LogOut</Button> */}\n                        </NavDropdown>\n                </Nav>\n        </Navbar>\n          \n          </>\n          \n          \n        //   <div>{user != null ? (\n        //           <>\n        //         <h1>logged in</h1>\n        //         <Button className = \"w-100\" type = \"button\" onClick = {() => logOut()}>LogOut</Button>\n        //         </>\n        // ) :  <h1>Not logged in</h1>}\n        \n        // </div>\n    \n    \n    \n  )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}