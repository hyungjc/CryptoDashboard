{"ast":null,"code":"var _jsxFileName = \"/Users/hyungjunchang/Desktop/login/src/frontend/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { useState } from 'react';\nimport httpClient from \"../../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const logInUser = async () => {\n    console.log(email, password);\n    const resp = await httpClient.post(\"//localhost:5000/login\", {\n      email,\n      password\n    });\n\n    if (resp.status == 200) {\n      window.location.href = \"/\";\n    } else if (resp.status == 401) {\n      console.log(\"Incorrect\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-100\",\n            type: \"button\",\n            onClick: () => logInUser(),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/reset\",\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/hyungjunchang/Desktop/login/src/frontend/components/Login.js"],"names":["Form","Button","Card","useState","httpClient","Login","email","setEmail","password","setPassword","logInUser","console","log","resp","post","status","window","location","href","e","target","value"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,MAAd,EAAsBC,IAAtB,QAAiC,iBAAjC;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMO,SAAS,GAAG,YAAY;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBE,QAAnB;AAEA,UAAMK,IAAI,GAAG,MAAMT,UAAU,CAACU,IAAX,CAAgB,wBAAhB,EAA0C;AACrDR,MAAAA,KADqD;AAErDE,MAAAA;AAFqD,KAA1C,CAAnB;;AAKA,QAAIK,IAAI,CAACE,MAAL,IAAe,GAAnB,EAAwB;AAChBC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACP,KAFD,MAGK,IAAIL,IAAI,CAACE,MAAL,IAAe,GAAnB,EAAwB;AACrBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACP;AACR,GAdD;;AAiBN,sBACA;AAAA,4BACA,QAAC,IAAD;AAAA,6BACM,QAAC,IAAD,CAAM,IAAN;AAAA,+BACQ,QAAC,IAAD;AAAA,kCACQ,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAG,OAAjB;AAAA,oCACQ,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADR,eAEQ,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAG,OAArB;AAA6B,cAAA,KAAK,EAAIN,KAAtC;AAA6C,cAAA,QAAQ,EAAKa,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxE;AAA0F,cAAA,QAAQ;AAAlG;AAAA;AAAA;AAAA;AAAA,oBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,eAKQ,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAG,UAAjB;AAAA,oCACQ,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADR,eAEQ,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAG,UAArB;AAAgC,cAAA,KAAK,EAAIb,QAAzC;AAAmD,cAAA,QAAQ,EAAKW,CAAD,IAAOV,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjF;AAAmG,cAAA,QAAQ;AAA3G;AAAA;AAAA;AAAA;AAAA,oBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,kBALR,eASQ,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAG,OAApB;AAA4B,YAAA,IAAI,EAAG,QAAnC;AAA4C,YAAA,OAAO,EAAI,MAAMX,SAAS,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YADA,eAiBA;AAAK,MAAA,SAAS,EAAG,wBAAjB;AAAA,6BAA0C;AAAG,QAAA,IAAI,EAAG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,YAjBA;AAAA,kBADA;AAqBD,CA3CD;;GAAML,K;;KAAAA,K;AA6CN,eAAeA,KAAf","sourcesContent":["import {Form, Button, Card} from 'react-bootstrap'\nimport {useState} from 'react'\nimport httpClient from \"../../httpClient\"\n\nconst Login = () => {\n\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n\n        const logInUser = async () => {\n                console.log(email, password);\n\n                const resp = await httpClient.post(\"//localhost:5000/login\", {\n                        email,\n                        password,\n                });\n\n                if (resp.status == 200) {\n                        window.location.href = \"/\";\n                }\n                else if (resp.status == 401) {\n                        console.log(\"Incorrect\")\n                }\n        }\n\n\n  return (\n  <>\n  <Card >\n        <Card.Body>\n                <Form>\n                        <Form.Group id = \"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type = \"email\" value = {email} onChange = {(e) => setEmail(e.target.value)} required />\n                        </Form.Group>\n                        <Form.Group id = \"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type = \"password\" value = {password} onChange = {(e) => setPassword(e.target.value)} required />\n                        </Form.Group>\n                        <Button className = \"w-100\" type = \"button\" onClick = {() => logInUser()}>Login</Button>\n                        \n                </Form>\n        </Card.Body>\n  </Card>\n  <div className = \"w-100 text-center mt-2\"><a href = \"/reset\">Forgot password?</a></div>\n  </>\n  )\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}